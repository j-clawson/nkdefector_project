import torch
import torch.nn as nn

// input_size -> number of features (variables) we are training on
// hidden_size -> num neurons in hidden layers
  
class DefectorPredictor(nn.Module):
    def __init__(self, input_size, hidden_size):
        super().__init__()
        self.fc1 = nn.Linear(input_size, hidden_size)
        self.bn1 = nn.BatchNorm1d(hidden_size)
        self.relu = nn.ReLU()
        self.fc2 = nn.Linear(hidden_size, 1) // 1 represents output_size

    def forward(self, x):
        x = self.relu(self.bn1(self.fc1(x)))
        x = self.fc2(x)
        return x
